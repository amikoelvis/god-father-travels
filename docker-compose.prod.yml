version: "3.9"

services:
  # ------------------------
  # Django Web Application
  # ------------------------
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: travel_web
    command: gunicorn travel.wsgi:application --bind 0.0.0.0:8000 --workers 3
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    volumes:
      - static_volume:/app/static
    restart: always

  # ------------------------
  # PostgreSQL Database
  # ------------------------
  db:
    image: postgres:15-alpine
    container_name: travel_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  # ------------------------
  # Redis (for caching & Celery)
  # ------------------------
  redis:
    image: redis:7-alpine
    container_name: travel_redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data

  # ------------------------
  # Celery Worker
  # ------------------------
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: travel_celery
    command: celery -A travel worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - web
      - redis
      - db
    restart: always

  # ------------------------
  # Celery Beat Scheduler (optional)
  # ------------------------
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: travel_celery_beat
    command: celery -A travel beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - web
      - redis
      - db
    restart: always

volumes:
  postgres_data:
  redis_data:
  static_volume:
